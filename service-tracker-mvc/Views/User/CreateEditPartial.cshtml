@model service_tracker_mvc.Models.User
@if (this.ViewContext.FormContext == null) { this.ViewContext.FormContext = new FormContext(); }
@Html.Partial("PairEditor", new PairEditor()
{
    Label = Html.LabelFor(model => model.RoleId),
    Editor = Html.DropDownListFor(model => model.RoleId, MvcExtensions.ToSelectList<RoleType>(Model == null? "" : Model.RoleId.ToString())),
    Validation = Html.ValidationMessageFor(model => model.RoleId)
})
@Html.Partial("PairEditor", new PairEditor()
{
    Label = Html.LabelFor(model => model.ServicerId),
    Editor = Html.DropDownListFor(model => model.ServicerId, (IEnumerable<SelectListItem>)ViewBag.Servicers, ""),
    Validation = Html.ValidationMessageFor(model => model.ServicerId)
})
@Html.Partial("PairEditor", new PairEditor()
{
    Label = Html.LabelFor(model => model.OrganizationId),
    Editor = Html.DropDownListFor(model => model.OrganizationId, (IEnumerable<SelectListItem>)ViewBag.Organizations, ""),
    Validation = Html.ValidationMessageFor(model => model.OrganizationId)
})

<script>
    $(function () {
        var $employeeSections = $('#ServicerId').closest('.pair');
        var $organizationSections = $('#OrganizationId').closest('.pair');

        var roleChanged = function (speed) {
            var roleId = Number($('#RoleId').val());

            switch (roleId) {
                case @Html.Encode((int)RoleType.Customer):
                    $employeeSections.fadeOut(speed, function(){ $organizationSections.fadeIn(speed) });
                    break;
                case @Html.Encode((int)RoleType.Employee):
                    $organizationSections.fadeOut(speed, function(){ $employeeSections.fadeIn(speed) });
                    break;
                default:
                    $employeeSections.fadeOut(speed);
                    $organizationSections.fadeOut(speed);
            }
        };

        $('#RoleId').change(function(){ roleChanged(200); });
        roleChanged(0);
    });
</script>