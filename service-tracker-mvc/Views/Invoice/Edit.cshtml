@model service_tracker_mvc.Models.Invoice
@{
    ViewBag.Title = Model.InvoiceId > 0 ? "Invoice " + Model.InvoiceId + " - Edit" : "Invoice - New - ";
}
<script src="@Url.VersionedContent("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.VersionedContent("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script>
    $(function () {
        $('.affects-calculation').change(function () {
            var $row = $(this).closest('tr');
            var cost = $row.find('.calc-cost option:selected').data('cost');
            var qty = parseFloat($row.find('.calc-quantity').val());

            var total = cost * qty;

            $row.find('.calc-output-cost').text(formatMoney(cost));
            $row.find('.calc-output-total').text(formatMoney(total));
        });

        $('.calc-quantity').change();

        var UpdateGrandTotals = function () {
            var GrandQuantity = 0, GrandTotal = 0;
            $('.calc-quantity').each(function () { GrandQuantity += parseFloat($(this).val()); });
            $('.calc-output-total').each(function () { GrandTotal += parseFloat($(this).text()); });

            $('.calc-output-grand-quantity').text(formatMoney(GrandQuantity));
            $('.calc-output-grand-total').text(formatMoney(GrandTotal));
        };
        UpdateGrandTotals();
        $('.affects-calculation').change(UpdateGrandTotals);
    });
</script>
@using (Html.BeginForm(null, null, FormMethod.Post, htmlAttributes: new { id = "edit-form" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.InvoiceId)
    <div class="clearfix">
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.ServiceDate)
            </div>
            <div class="editor-field date">
                @Html.EditorFor(model => model.ServiceDate)
                @Html.ValidationMessageFor(model => model.ServiceDate)
            </div>
        </div>
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.SiteId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.SiteId, (IEnumerable<SelectListItem>)ViewBag.Sites)
                @Html.ValidationMessageFor(model => model.SiteId)
            </div>
        </div>
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.ServicerId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.ServicerId, (IEnumerable<SelectListItem>)ViewBag.Servicers)
                @Html.ValidationMessageFor(model => model.ServicerId)
            </div>
        </div>
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.KeyRec)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.KeyRec)
                @Html.ValidationMessageFor(model => model.KeyRec)
            </div>
        </div>
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.FrtBill)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FrtBill)
                @Html.ValidationMessageFor(model => model.FrtBill)
            </div>
        </div>
        <div class='pair' style='margin-right: 0'>
            <div class="editor-label">
                @Html.LabelFor(model => model.PurchaseOrder)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.PurchaseOrder)
                @Html.ValidationMessageFor(model => model.PurchaseOrder)
            </div>
        </div>
    </div>
    <table class='data-table ui-widget'>
        <tr>
            <th class='ui-state-default'>Service</th>
            <th class='ui-state-default'>Comment</th>
            <th class='ui-state-default number'>Quantity</th>
            <th class='ui-state-default number'>Unit Price</th>
            <th class='ui-state-default number'>Total</th>
        </tr>
        @for (int i = 0; i < Model.Items.Count; ++i)
        {
            var index = i;
            <tr>
                <td class='ui-widget-content'>@Html.Hidden("Items.Index", index.ToString())
                    @Html.HiddenFor(m => m.Items[index].InvoiceId)
                    @Html.HiddenFor(m => m.Items[index].InvoiceItemId)
                    @Html.ExtendedDropDownListFor(m => m.Items[index].ServiceId, (IEnumerable<ExtendedSelectListItem>)ViewBag.Services, "", new { @class = "calc-cost affects-calculation" }, Model.Items[index].ServiceId)
                </td>
                <td class='ui-widget-content'>@Html.EditorFor(m => m.Items[index].Comment)
                </td>
                <td class='ui-widget-content number'>@Html.TextBoxFor(m => m.Items[index].Quantity, new { @class = "calc-quantity affects-calculation" })
                </td>
                <td class='ui-widget-content number'>
                    <span class='calc-output-cost'>(cost)</span>
                </td>
                <td class='ui-widget-content number'>
                    <span class='calc-output-total'>(total)</span>
                </td>
            </tr>
        }
        <tr>
            <th class='number' colspan="4"><span class='calc-output-grand-quantity'></span></th>
            <th class='number' colspan="2"><span class='calc-output-grand-total'></span></th>
        </tr>
    </table>
    <div class='actions'>
        <input type="submit" value="Save" />
        @switch (Request["from"])
        {
            case "details":
            @Html.ActionLink("Cancel", "Details", new { Id = Model.InvoiceId })
       break;

            default:   
            @Html.ActionLink("Cancel", "Index")
       break;
        }
        @if (Model.InvoiceId > 0)
        {
            @Html.ActionLink("Delete", "Delete", new { Id = Model.InvoiceId }, new { style = "float:right" })
        }
    </div>
}