@model service_tracker_mvc.Models.Invoice
@{
    ViewBag.Title = "Edit";
}
<h2>Edit Invoice</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script>
    $(function () {
        $('.affects-calculation').change(function () {
            var $row = $(this).closest('tr');
            var cost = $row.find('.calc-cost option:selected').data('cost');
            var qty = parseFloat($row.find('.calc-quantity').val());

            var total = cost * qty;

            cost = Number(cost).toFixed(2);
            total = Number(total).toFixed(2);

            $row.find('.calc-output-cost').text(cost);
            $row.find('.calc-output-total').text(total);
        });

        $('.calc-quantity').change();

        var UpdateGrandTotals = function () {
            var GrandQuantity = 0, GrandTotal = 0;
            $('.calc-quantity').each(function () { GrandQuantity += parseFloat($(this).val()); });
            $('.calc-output-total').each(function () { GrandTotal += parseFloat($(this).text()); });

            GrandQuantity = Number(GrandQuantity).toFixed(2);
            GrandTotal = Number(GrandTotal).toFixed(2);
            $('.calc-output-grand-quantity').text(GrandQuantity);
            $('.calc-output-grand-total').text(GrandTotal);
        };
        UpdateGrandTotals();
        $('.affects-calculation').change(UpdateGrandTotals);
    });
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.InvoiceId)
    <div class='input-field'>
        <div class="editor-label">
            @Html.LabelFor(model => model.ServiceDate)
        </div>
        <div class="editor-field date">
            @Html.EditorFor(model => model.ServiceDate)
            @Html.ValidationMessageFor(model => model.ServiceDate)
        </div>
    </div>    
    <div class='input-field'>
        <div class="editor-label">
            @Html.LabelFor(model => model.ServicerId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ServicerId, (IEnumerable<SelectListItem>)ViewBag.Servicers)
            @Html.ValidationMessageFor(model => model.ServicerId)
        </div>
    </div>    
    <div class='input-field'>
        <div class="editor-label">
            @Html.LabelFor(model => model.CustomerId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CustomerId, (IEnumerable<SelectListItem>)ViewBag.Customers)
            @Html.ValidationMessageFor(model => model.CustomerId)
        </div>
    </div>    
    <div class='input-field'>
        <div class="editor-label">
            @Html.LabelFor(model => model.KeyRec)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.KeyRec)
            @Html.ValidationMessageFor(model => model.KeyRec)
        </div>
    </div>    
    <div class='input-field'>
        <div class="editor-label">
            @Html.LabelFor(model => model.FrtBill)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FrtBill)
            @Html.ValidationMessageFor(model => model.FrtBill)
        </div>
    </div>    
    <div class='input-field' style='margin-right:0'>
        <div class="editor-label">
            @Html.LabelFor(model => model.PurchaseOrder)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PurchaseOrder)
            @Html.ValidationMessageFor(model => model.PurchaseOrder)
        </div>
    </div>    
    <hr style="clear:both; padding:10px 0px; color:#fff; border-color: transparent"/>
    <table style="clear:both">
        <tr>
            <th>Product</th>
            <th>Comment</th>
            <th>Service</th>
            <th class='number'>Quantity</th>
            <th class='number'>Unit Price</th>
            <th class='number'>Total</th>
        </tr>
        @for(int i =0; i<Model.Items.Count; ++i){
            var index = Model.Items[i].InvoiceItemId.ToString();
            <tr>
                <td>@Html.Hidden("Items.Index", index)
                    @Html.HiddenFor(m => m.Items[i].InvoiceId)
                    @Html.HiddenFor(m => m.Items[i].InvoiceItemId)
                    @Model.Items[i].ProductId
                    @Html.DropDownListFor(m => m.Items[i].ProductId, new SelectList(ViewBag.Products, "Value", "Text", Model.Items[i].ProductId))</td>
                <td>@Html.EditorFor(m => m.Items[i].Comment)</td>
                <td>@Html.ExtendedDropDownListFor(m => m.Items[i].ServiceId, (IEnumerable<service_tracker_mvc.ExtendedSelectListItem>)ViewBag.Services, null, new { @class = "calc-cost affects-calculation" })</td>
                <td class='number'>@Html.TextBoxFor(m => m.Items[i].Quantity, new { @class = "calc-quantity affects-calculation" })</td>
                <td class='number'><span class='calc-output-cost'>(cost)</span></td>
                <td class='number'><span class='calc-output-total'>(total)</span></td>
            </tr>
        }
        <tr>
            <th class='number' colspan="4"><span class='calc-output-grand-quantity'></span></th>
            <th class='number' colspan="2"><span class='calc-output-grand-total'></span></th>
        </tr>
    </table>
    <p class='actions'>
        @Html.ActionLink("Back to List", "Index")
        <input type="submit" value="Save" />
    </p>
}
<div>
</div>
