@model service_tracker_mvc.Models.InvoiceIndexViewModel
@{
    ViewBag.Title = "Index";
}
@using (Html.BeginForm(null, null, FormMethod.Get, htmlAttributes: new { id = "search-form" }))
{
    <div class="clearfix">
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.InvoiceFilter.StartDate)
            </div>
            <div class="editor-field date">
                @Html.EditorFor(model => model.InvoiceFilter.StartDate)
                @Html.ValidationMessageFor(model => model.InvoiceFilter.StartDate)
                -
                @Html.EditorFor(model => model.InvoiceFilter.EndDate)
                @Html.ValidationMessageFor(model => model.InvoiceFilter.EndDate)
            </div>
        </div>
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.InvoiceFilter.OrganizationId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.InvoiceFilter.OrganizationId, (IEnumerable<SelectListItem>)ViewBag.Organizations)
                @Html.ValidationMessageFor(model => model.InvoiceFilter.OrganizationId)
            </div>
        </div>       
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.InvoiceFilter.SiteId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.InvoiceFilter.SiteId, (IEnumerable<SelectListItem>)ViewBag.Sites)
                @Html.ValidationMessageFor(model => model.InvoiceFilter.SiteId)
            </div>
        </div>       
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.InvoiceFilter.ServicerId)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.InvoiceFilter.ServicerId, (IEnumerable<SelectListItem>)ViewBag.Servicers)
                @Html.ValidationMessageFor(model => model.InvoiceFilter.ServicerId)
            </div>
        </div>
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.InvoiceFilter.KeyRec)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.InvoiceFilter.KeyRec)
                @Html.ValidationMessageFor(model => model.InvoiceFilter.KeyRec)
            </div>
        </div>
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.InvoiceFilter.FrtBill)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.InvoiceFilter.FrtBill)
                @Html.ValidationMessageFor(model => model.InvoiceFilter.FrtBill)
            </div>
        </div>
        <div class='pair'>
            <div class="editor-label">
                @Html.LabelFor(model => model.InvoiceFilter.PurchaseOrder)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.InvoiceFilter.PurchaseOrder)
                @Html.ValidationMessageFor(model => model.InvoiceFilter.PurchaseOrder)
            </div>
        </div>
        <div class='pair' style="padding-left: 15px;">
            <div class="editor-field">
                <input type='submit' name='Button' value='Filter' />
            </div>
        </div>
        <div class='pair'>
            <div class="editor-field">
                <input type='submit' name='Button' value='Export' />
            </div>
        </div>
        <div class='pair' style='margin-right: 0;margin-top:10px;'>
            <div class="editor-field">
                <a href="?@service_tracker_mvc.Controllers.InvoiceController.ResetFiltersRequestKey=yep">Reset Filters</a>
            </div>
        </div>
    </div>
}
@if (!Model.Invoices.Any())
{
    <div class='no-data'>
        No invoices were found</div>
}
else
{
    <table class='data-table ui-widget'>
        <tr>
            <th class='ui-state-default'>Service Date</th>
            <th class='ui-state-default'>Store</th>
            <th class='ui-state-default'>Employee</th>
            <th class='ui-state-default'>Key Rec</th>
            <th class='ui-state-default'>Invoice</th>
            <th class='ui-state-default'>PO</th>
            <th class='ui-state-default number'>Items</th>
            <th class='ui-state-default number'>Total</th>
            <th class='ui-state-default number'></th>
        </tr>
        @foreach (var item in Model.Invoices)
        {
            <tr>
                <td class='ui-widget-content'>
                    @Html.DisplayFor(modelItem => item.ServiceDate)
                </td>
                <td class='ui-widget-content'>
                    @Html.DisplayFor(modelItem => item.Site.Name)
                </td>
                <td class='ui-widget-content'>
                    @Html.DisplayFor(modelItem => item.Servicer.Name)
                </td>
                <td class='ui-widget-content'>
                    @Html.DisplayFor(modelItem => item.KeyRec)
                </td>
                <td class='ui-widget-content'>
                    @Html.DisplayFor(modelItem => item.FrtBill)
                </td>
                <td class='ui-widget-content'>
                    @Html.DisplayFor(modelItem => item.PurchaseOrder)
                </td>
                <td class='ui-widget-content number'>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td class='ui-widget-content number'>
                    @Html.DisplayFor(modelItem => item.Total)
                </td>
                <td class='ui-widget-content number'>
                    @Html.ActionLink("Details", "Details", new { id = item.InvoiceId }) 
                    @if(User.IsInRole("Manager")){
                        <text>|</text> @Html.ActionLink("Edit", "Edit", new { id = item.InvoiceId, from = "index" })
                    }
                </td>
            </tr>
        }
    </table>
}