@model service_tracker_mvc.Models.InvoiceIndexViewModel
@{
    ViewBag.Title = "Index";
}
@section AdditionalScripts{
        <script src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js" type="text/javascript"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/mvc/3.0/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
    <script>
        if (!window.jQuery.validator) {
            // loading via CDN failed...try local copies instead
            document.write('<script src="@Url.VersionedContent("~/Scripts/jquery.validate.min.js")">\x3C/script>');
            document.write('<script src="@Url.VersionedContent("~/Scripts/jquery.validate.unobtrusive.min.js")">\x3C/script>')
        }
    </script>
}
@using (Html.BeginForm(null, null, FormMethod.Get, htmlAttributes: new { id = "search-form" }))
{
    <div class="clearfix">
    @Html.Partial("PairEditor", new PairEditor(){
        Label = Html.LabelFor(model => model.InvoiceFilter.StartDate),
        Editor = MvcExtensions.Concat(
            Html.EditorFor(model => model.InvoiceFilter.StartDate),
            MvcHtmlString.Create(" - "),
            Html.EditorFor(model => model.InvoiceFilter.EndDate)
        ),
        Validation = MvcExtensions.Concat(
            Html.ValidationMessageFor(model => model.InvoiceFilter.StartDate),
            Html.ValidationMessageFor(model => model.InvoiceFilter.EndDate)
        )
    })

    @Html.Partial("PairEditor", new PairEditor(){
        Label = Html.LabelFor(model => model.InvoiceFilter.SiteId),
        Editor = Html.DropDownListFor(model => model.InvoiceFilter.SiteId, (IEnumerable<SelectListItem>)ViewBag.Sites),
        Validation = Html.ValidationMessageFor(model => model.InvoiceFilter.SiteId)
    })

    @Html.Partial("PairEditor", new PairEditor(){
        Label = Html.LabelFor(model => model.InvoiceFilter.ServicerId),
        Editor = Html.DropDownListFor(model => model.InvoiceFilter.ServicerId, (IEnumerable<SelectListItem>)ViewBag.Servicers),
        Validation = Html.ValidationMessageFor(model => model.InvoiceFilter.ServicerId)
    })
    
    @Html.Partial("PairEditor", new PairEditor(){
        Label = Html.LabelFor(model => model.InvoiceFilter.KeyRec),
        Editor = Html.TextBoxFor(model => model.InvoiceFilter.KeyRec),
        Validation = Html.ValidationMessageFor(model => model.InvoiceFilter.KeyRec)
    })
    
    @Html.Partial("PairEditor", new PairEditor(){
        Label = Html.LabelFor(model => model.InvoiceFilter.FrtBill),
        Editor = Html.TextBoxFor(model => model.InvoiceFilter.FrtBill),
        Validation = Html.ValidationMessageFor(model => model.InvoiceFilter.FrtBill)
    })
    
    @Html.Partial("PairEditor", new PairEditor(){
        Label = Html.LabelFor(model => model.InvoiceFilter.PurchaseOrder),
        Editor = Html.TextBoxFor(model => model.InvoiceFilter.PurchaseOrder),
        Validation = Html.ValidationMessageFor(model => model.InvoiceFilter.PurchaseOrder)
    })

    <div class='pair' style="margin-top:15px">
                <input type='submit' name='Button' value='Filter' />
                <input type='submit' name='Button' value='Export' />
                <a href="?@service_tracker_mvc.Controllers.InvoiceController.ResetFiltersRequestKey=yep">Reset Filters</a>
    </div>
    </div>
}
@if (!Model.Invoices.Any())
{
    <div class='no-data'>
        No invoices were found</div>
}
else
{
    <table class='data-table ui-widget'>
        <thead>
            <tr>
                <th class='ui-state-default hide-4'>Service Date</th>
                <th class='ui-state-default hide-3'>Store</th>
                <th class='ui-state-default hide-2'>Employee</th>
                <th class='ui-state-default'>Key Rec</th>
                <th class='ui-state-default hide-2'>Invoice</th>
                <th class='ui-state-default hide-1'>PO</th>
                <th class='ui-state-default hide-1 number'>Items</th>
                <th class='ui-state-default number'>Total</th>
                <th class='ui-state-default number'></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Invoices)
        {
            <tr>
                <td class='ui-widget-content hide-4'>
                    @Html.DisplayFor(modelItem => item.ServiceDate)
                </td>
                <td class='ui-widget-content hide-3'>
                    @item.Site.ToString()
                </td>
                <td class='ui-widget-content hide-2'>
                    @Html.DisplayFor(modelItem => item.Servicer.Name)
                </td>
                <td class='ui-widget-content'>
                    @Html.DisplayFor(modelItem => item.KeyRec)
                </td>
                <td class='ui-widget-content hide-2'>
                    @Html.DisplayFor(modelItem => item.FrtBill)
                </td>
                <td class='ui-widget-content hide-1'>
                    @Html.DisplayFor(modelItem => item.PurchaseOrder)
                </td>
                <td class='ui-widget-content number hide-1'>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td class='ui-widget-content number'>
                    @Html.DisplayFor(modelItem => item.Total)
                </td>
                <td class='ui-widget-content number'> 
                    <a href="@Url.Action("Details", new { id = item.InvoiceId })"><span title="Details" class="ui-icon ui-icon-search" style="display:inline-block"></span></a>
                    @if(User.IsInRole("Manager")){
                        <a href="@Url.Action("Edit", new { id = item.InvoiceId, from = "index" })"><span title="Edit" class="ui-icon ui-icon-pencil" style="display:inline-block"></span></a>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}